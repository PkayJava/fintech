<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd">

	<context:component-scan base-package="com.angkorteam.fintech" />

	<bean id="filename" class="java.lang.String">
		<constructor-arg value="fintech.properties.xml" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="localOverride" value="true" />
		<property name="location" ref="resource" />
		<property name="fileEncoding" value="UTF-8" />
	</bean>

	<bean id="configuration"
		class="com.angkorteam.framework.spring.XMLPropertiesConfigurationFactoryBean">
		<property name="filename" ref="filename" />
	</bean>

	<bean id="resource" class="com.angkorteam.framework.spring.ResourceFactoryBean">
		<property name="filename" ref="filename" />
	</bean>

	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.GsonHttpMessageConverter">
				<property name="gson" ref="gson" />
			</bean>
		</mvc:message-converters>
		<mvc:path-matching path-matcher="pathMatcher"
			suffix-pattern="false" registered-suffixes-only="true" />
	</mvc:annotation-driven>

	<mvc:resources mapping="/resource/**" location="file:${resource.repo}/"
		cache-period="604800" order="-1" />

	<task:annotation-driven executor="executor"
		scheduler="scheduler" />

	<bean id="pathMatcher" class="org.springframework.util.AntPathMatcher">
		<property name="caseSensitive" value="false" />
	</bean>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="true" />
		<property name="mediaTypes">
			<props>
				<prop key="json">application/json</prop>
				<prop key="xml">application/xml</prop>
			</props>
		</property>
	</bean>

	<bean id="gson" class="com.angkorteam.framework.spring.GsonFactoryBean">
		<property name="base64EncodeByteArrays" value="false" />
		<property name="dateFormatPattern" value="${pattern.datetime}" />
		<property name="disableHtmlEscaping" value="true" />
		<property name="prettyPrinting" value="false" />
		<property name="serializeNulls" value="false" />
	</bean>

	<bean id="stringEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="password" value="${encryption.password}" />
		<property name="stringOutputType" value="${encryption.output}" />
	</bean>

	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${executor.pool_size}" />
		<property name="maxPoolSize" value="${executor.pool_size}" />
		<property name="queueCapacity" value="${executor.queue_capacity}" />
		<property name="daemon" value="true" />
		<property name="beanName" value="executor" />
	</bean>

	<bean id="scheduler"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
		<property name="beanName" value="scheduler" />
		<property name="daemon" value="true" />
		<property name="poolSize" value="${executor.pool_size}" />
	</bean>

	<bean id="delegate" class="com.angkorteam.framework.spring.DelegateFactoryBean">
		<property name="filename" ref="filename" />
	</bean>

	<bean id="mifos" class="com.angkorteam.fintech.MifosDataSourceManager">
		<property name="mifosUrl" value="${mifos.url}" />
		<property name="delegate" ref="delegate" />
	</bean>

	<bean id="dataSource"
		class="com.angkorteam.framework.spring.HttpServletRequestDataSourceFactoryBean"
		scope="request">
		<property name="delegate" ref="delegate" />
	</bean>

	<bean id="transactionManager"
		class="com.angkorteam.framework.spring.TransactionManagerFactoryBean">
		<property name="delegate" ref="delegate" />
	</bean>

	<bean id="jdbcTemplate" class="com.angkorteam.framework.spring.JdbcTemplate"
		scope="request">
		<constructor-arg index="0" ref="dataSource" />
	</bean>

	<bean id="namedParameterJdbcTemplate" class="com.angkorteam.framework.spring.JdbcNamed"
		scope="request">
		<constructor-arg index="0" ref="dataSource" />
	</bean>

</beans>